# Dynasty Staging Environment Variables Template
# Copy this to .env.staging and fill in your staging values
# ‚ö†Ô∏è  IMPORTANT: Keep these secrets secure and never commit to git!

# Core Security Keys (Auto-generated - run ./scripts/generate-staging-secrets.sh)
JWT_SECRET_KEY=<WILL_BE_GENERATED>
ENCRYPTION_MASTER_KEY=<WILL_BE_GENERATED>
SESSION_SECRET=<WILL_BE_GENERATED>
API_KEY_SALT=<WILL_BE_GENERATED>
WEBHOOK_SECRET=<WILL_BE_GENERATED>
DB_ENCRYPTION_KEY=<WILL_BE_GENERATED>

# AWS SES Configuration (Staging Environment)
EMAIL_PROVIDER=ses
SES_FROM_EMAIL=noreply@dynastytest.com
SES_FROM_NAME=Dynasty App (Staging)
AWS_REGION=us-east-2
# Note: In production, SES will use IAM roles. For local testing, you can add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY

# Frontend URL (your staging domain)
FRONTEND_URL=https://dynastytest.com


# Google Places API Key (can use same as production with staging restrictions)
GOOGLE_PLACES_API_KEY=<YOUR_STAGING_GOOGLE_PLACES_API_KEY>

# Stripe Configuration (use test keys for staging)
STRIPE_SECRET_KEY=sk_test_<YOUR_STAGING_STRIPE_SECRET_KEY>
STRIPE_WEBHOOK_SECRET=whsec_<YOUR_STAGING_STRIPE_WEBHOOK_SECRET>
STRIPE_PUBLISHABLE_KEY=pk_test_<YOUR_STAGING_STRIPE_PUBLISHABLE_KEY>
# Optional: Pin specific API version (e.g., 2023-10-16)
STRIPE_API_VERSION=

# Cloudflare R2 Configuration (JSON format - use staging bucket)
R2_CONFIG={"accountId":"<YOUR_STAGING_R2_ACCOUNT_ID>","accessKeyId":"<YOUR_STAGING_R2_ACCESS_KEY_ID>","secretAccessKey":"<YOUR_STAGING_R2_SECRET_ACCESS_KEY>"}

# R2 Storage Configuration
R2_BASE_BUCKET=dynastydev
ENABLE_R2_TESTS=true
ENABLE_R2_MIGRATION=true
STORAGE_PROVIDER=r2

# üìã Instructions for staging setup:
# 1. Run: ./scripts/generate-staging-secrets.sh to generate security keys
# 2. Replace all <YOUR_STAGING_*> placeholders with actual staging values
# 3. Run: ./scripts/deploy-staging-secrets.sh
# 4. Run: ./scripts/verify-staging-config.sh
# 5. Deploy: firebase deploy --only functions --project staging