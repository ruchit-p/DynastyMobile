name: Blue-Green Production Deployment

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deploy to Blue or Green environment'
        required: true
        default: 'blue'
        type: choice
        options:
          - blue
          - green
      switch_traffic:
        description: 'Switch traffic after deployment'
        required: true
        default: false
        type: boolean

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-to-environment:
    name: Deploy to ${{ github.event.inputs.deploy_target }} Environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"

      - name: Install dependencies
        run: |
          cd apps/web/dynastyweb
          yarn install --frozen-lockfile

      - name: Run production tests
        run: |
          cd apps/web/dynastyweb
          yarn test --ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to ${{ github.event.inputs.deploy_target }}
        id: deploy
        run: |
          cd apps/web/dynastyweb
          
          # Deploy to specific alias
          DEPLOYMENT_URL=$(vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          
          # Alias to blue/green subdomain
          if [[ "${{ github.event.inputs.deploy_target }}" == "blue" ]]; then
            vercel alias set $DEPLOYMENT_URL dynasty-blue.vercel.app --token=${{ secrets.VERCEL_TOKEN }}
            echo "environment-url=https://dynasty-blue.vercel.app" >> $GITHUB_OUTPUT
          else
            vercel alias set $DEPLOYMENT_URL dynasty-green.vercel.app --token=${{ secrets.VERCEL_TOKEN }}
            echo "environment-url=https://dynasty-green.vercel.app" >> $GITHUB_OUTPUT
          fi
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.PROD_FIREBASE_APP_ID }}
          NEXT_PUBLIC_ENVIRONMENT: production-${{ github.event.inputs.deploy_target }}

      - name: Health check new deployment
        run: |
          URL="${{ steps.deploy.outputs.environment-url }}"
          echo "Checking health of $URL"
          
          for i in {1..5}; do
            response=$(curl -s -o /dev/null -w "%{http_code}" $URL)
            if [ $response -eq 200 ]; then
              echo "✅ Health check passed"
              exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done
          
          echo "❌ Health check failed"
          exit 1

      - name: Run smoke tests
        run: |
          echo "Running smoke tests against ${{ steps.deploy.outputs.environment-url }}"
          # Add your smoke test commands here

  switch-traffic:
    name: Switch Production Traffic
    runs-on: ubuntu-latest
    needs: deploy-to-environment
    if: github.event.inputs.switch_traffic == 'true'
    
    environment:
      name: production-traffic-switch
      
    steps:
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Switch traffic to ${{ github.event.inputs.deploy_target }}
        run: |
          if [[ "${{ github.event.inputs.deploy_target }}" == "blue" ]]; then
            SOURCE_URL="https://dynasty-blue.vercel.app"
          else
            SOURCE_URL="https://dynasty-green.vercel.app"
          fi
          
          # Point production domain to new deployment
          vercel alias set $SOURCE_URL mydynastyapp.com --token=${{ secrets.VERCEL_TOKEN }}
          
          echo "✅ Traffic switched to ${{ github.event.inputs.deploy_target }} environment"

      - name: Notify team
        run: |
          echo "Production traffic now pointing to ${{ github.event.inputs.deploy_target }} environment"
          echo "Previous environment is still available for rollback"