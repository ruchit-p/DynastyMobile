name: Auto-Fix CI Errors

on:
  workflow_run:
    workflows: ["Dev Branch CI"]
    types: [completed]
    branches: [dev]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to fix'
        required: false
        type: string
      branch:
        description: 'Branch to fix'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-fix:
    name: Auto Fix CI Errors
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'failure' && 
       github.event.workflow_run.event == 'pull_request')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install ts-node
        run: npm install -g ts-node typescript

      - name: Get PR details
        id: pr-details
        if: github.event_name == 'workflow_run'
        run: |
          # Get PR number from workflow run
          PR_NUMBER=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
            --jq '.pull_requests[0].number')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
          # Get branch name
          BRANCH=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName')
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set fix parameters
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          else
            echo "pr_number=${{ steps.pr-details.outputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "branch=${{ steps.pr-details.outputs.branch }}" >> $GITHUB_OUTPUT
          fi

      - name: Run CI Error Fixer
        id: fix-errors
        run: |
          if [ -n "${{ steps.params.outputs.pr_number }}" ]; then
            ./scripts/claude-fix-ci-errors.sh \
              --pr ${{ steps.params.outputs.pr_number }} \
              --max-attempts 2
          elif [ -n "${{ steps.params.outputs.branch }}" ]; then
            ./scripts/claude-fix-ci-errors.sh \
              --branch ${{ steps.params.outputs.branch }} \
              --max-attempts 2
          else
            echo "No PR or branch specified"
            exit 1
          fi

      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create fix commit
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "fix: automated CI error fixes ðŸ¤–

          Auto-fixed the following:
          - ESLint errors
          - TypeScript issues
          - Import problems
          
          Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git push origin ${{ steps.params.outputs.branch }}

      - name: Comment on PR
        if: steps.check-changes.outputs.has_changes == 'true' && steps.params.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.params.outputs.pr_number }};
            const comment = `## ðŸ¤– Automated CI Fixes Applied

            I've automatically fixed some CI errors in this PR:
            
            - âœ… ESLint errors fixed
            - âœ… Code formatted
            - âœ… Common TypeScript issues resolved
            
            Please review the changes and re-run CI to see if all issues are resolved.
            
            <details>
            <summary>Files modified</summary>
            
            \`\`\`
            ${process.env.MODIFIED_FILES || 'Check commit for details'}
            \`\`\`
            </details>
            
            ---
            *Automated by Claude CI Fixer*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });

      - name: No fixes needed
        if: steps.check-changes.outputs.has_changes == 'false'
        run: |
          echo "No automated fixes could be applied. Manual intervention may be required."