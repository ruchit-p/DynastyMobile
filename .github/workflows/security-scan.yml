name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  dependency-scan:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [mobile, firebase/functions, web/dynastyweb]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Install dependencies for ${{ matrix.app }}
        run: |
          cd apps/${{ matrix.app }}
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi
      
      - name: Run npm audit
        run: |
          cd apps/${{ matrix.app }}
          if [ -f yarn.lock ]; then
            yarn audit --json > audit-results.json || true
          else
            npm audit --json > audit-results.json || true
          fi
        continue-on-error: true
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: audit-results-${{ matrix.app }}
          path: apps/${{ matrix.app }}/audit-results.json

  docker-security-scan:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'Dockerfile') || github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  firebase-security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Validate Firestore Rules
        run: |
          cd apps/firebase
          firebase firestore:rules:validate --project demo-project
      
      - name: Validate Storage Rules
        run: |
          cd apps/firebase
          firebase storage:rules:validate --project demo-project

  license-compliance:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Install license checker
        run: npm install -g license-checker
      
      - name: Check mobile licenses
        run: |
          cd apps/mobile
          yarn install --frozen-lockfile
          license-checker --json --out mobile-licenses.json
      
      - name: Check web licenses
        run: |
          cd apps/web/dynastyweb
          yarn install --frozen-lockfile
          license-checker --json --out web-licenses.json
      
      - name: Check firebase licenses
        run: |
          cd apps/firebase/functions
          npm ci
          license-checker --json --out firebase-licenses.json
      
      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            apps/mobile/mobile-licenses.json
            apps/web/dynastyweb/web-licenses.json
            apps/firebase/functions/firebase-licenses.json 